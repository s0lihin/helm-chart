apiVersion: v1
kind: Service
metadata:
  name: scm
spec:
  ports:
  - port: {{ .Values.servicescm.port }}
    name: ui
  clusterIP: None
  selector:
    app: ozone
    component: scm
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: scm
  labels:
    app.kubernetes.io/component: ozone
spec:
  selector:
    matchLabels:
      app: ozone
      component: scm
  serviceName: scm
  replicas: 1
  template:
    metadata:
      labels:
        app: ozone
        component: scm
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9876"
        prometheus.io/path: /prom
    spec:
      securityContext:
        fsGroup: 1000
      initContainers:
      - name: init
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        args:
        - ozone
        - scm
        - --init
        envFrom:
        - configMapRef:
            name: config
        volumeMounts:
        - name: data
          mountPath: /data
      containers:
      - name: scm
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        args:
        - ozone
        - scm
        livenessProbe:
          tcpSocket:
            port: 9861
          initialDelaySeconds: 30
        envFrom:
        - configMapRef:
            name: config
        volumeMounts:
        - name: data
          mountPath: /data
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 2Gi
